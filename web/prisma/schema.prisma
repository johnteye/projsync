// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  // output   = "../lib/generated/prisma"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id       String @id @default(auto()) @map("_id") @db.ObjectId
  email    String @unique
  username String
  role     String @default("admin")

  teams    TeamMember[]
  projects ProjectMember[]

  projectsOwned Project[]

  Team Team[]
}

model Team {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  teamName    String
  teamLead    User?    @relation(fields: [teamLeadId], references: [id])
  teamLeadId  String?  @db.ObjectId
  description String
  created_at  DateTime @default(now())

  members TeamMember[]
}

model Project {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  owner       User?    @relation(fields: [ownerId], references: [id])
  ownerId     String?  @db.ObjectId
  projectName String
  description String
  created_at  DateTime @default(now())

  members ProjectMember[]
}

model TeamMember {
  id     String @id @default(auto()) @map("_id") @db.ObjectId
  user   User   @relation(fields: [userId], references: [id])
  userId String @db.ObjectId
  team   Team   @relation(fields: [teamId], references: [id])
  teamId String @db.ObjectId
}

model ProjectMember {
  id        String  @id @default(auto()) @map("_id") @db.ObjectId
  user      User    @relation(fields: [userId], references: [id])
  userId    String  @db.ObjectId
  project   Project @relation(fields: [projectId], references: [id])
  projectId String  @db.ObjectId
}

